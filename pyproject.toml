[project]
	name = 'nbr-5410-calculator'
	dynamic = [ 'version' ]
	description = 'Calculator for electrical installations following the NBR 5410 standard.'
	readme = 'readme.md'
	license = { file = 'unlicense.txt' }
	
	authors = [
		{ name = 'Marcelo Vaz', email = 'marcelotsvaz@gmail.com' },
	]
	
	classifiers = [
		'Programming Language :: Python :: 3',
		'Operating System :: OS Independent',
		'License :: OSI Approved :: The Unlicense (Unlicense)',
	]
	
	requires-python = '>= 3.12, < 3.13'
	dependencies = [
		'pydantic >= 2.7.1',
		'pyjson5 >= 1.6.6',
		'pyside6-essentials >= 6.4.3',
	]
	
	
	[project.scripts]
		nbr-5410-calculator = 'nbr_5410_calculator.main:main'
	
	
	[project.urls]
		# homepage = 'https://marcelotsvaz.gitlab.io/nbr-5410-calculator/'
		# documentation = 'https://marcelotsvaz.gitlab.io/nbr-5410-calculator/'
		# changelog = ''
		issues = 'https://gitlab.com/marcelotsvaz/nbr-5410-calculator/-/issues'
		source = 'https://gitlab.com/marcelotsvaz/nbr-5410-calculator'
		# donate = ''



# 
# Building.
#-------------------------------------------------------------------------------
[build-system]
	build-backend = 'pdm.backend'
	requires = [
		'pdm-backend',
		'./build',
	]



[tool.pdm]
	version.source = 'scm'
	plugins = [ '-e ./build' ]
	
	[tool.pdm.dev-dependencies]
		dev = [
			'coverage == 7.3.2',
			'pdm-backend == 2.1.7',
			'pylint == 2.17.7',
		]
		
	# 	docs = [
	# 		'mkdocs-material[imaging]==9.4.7',
	# 	]
	
	
	[tool.pdm.scripts]
		test.shell = 'build/test.fish'
		test.help = 'Run tests with code coverage.'
		
		# docs.shell = 'cd docs/ && mkdocs build'
		# docs.help = 'Build documentation with MkDocs.'



# 
# Tools.
#-------------------------------------------------------------------------------
[tool.pyright]
	ignore = [ '*/UiMainWindow.py' ]
	typeCheckingMode = 'strict'
	reportMissingTypeStubs = 'none'
	reportUnnecessaryTypeIgnoreComment = 'error'
	reportMissingSuperCall = 'warning'
	reportUnknownLambdaType = 'none'



[tool.pylint]
	extension-pkg-allow-list = [ 'PySide6', 'pyjson5' ]
	ignore-paths = [ '.*/UiMainWindow.py' ]
	indent-string = '	'
	check-quote-consistency = true
	# Ignore if line contains URL longer than ~90 characters.
	ignore-long-lines = 'https?://\S{82,}|# pyright: ignore'
	
	load-plugins = [
		'pylint.extensions.docparams',
		'pylint.extensions.overlapping_exceptions',
	]
	
	enable = [
		'useless-suppression',
	]
	
	disable = [
		'trailing-whitespace',
		'missing-final-newline',
		'logging-fstring-interpolation',
		'too-few-public-methods',
	]
	
	# Naming.
	variable-naming-style = 'camelCase'
	inlinevar-naming-style = 'camelCase'
	function-naming-style = 'camelCase'
	argument-naming-style = 'camelCase'
	method-naming-style = 'camelCase'
	class-attribute-naming-style = 'camelCase'
	attr-naming-style = 'camelCase'
	
	# Naming (unchanged).
	module-naming-style = 'snake_case'
	class-naming-style = 'PascalCase'
	const-naming-style = 'UPPER_CASE'
	class-const-naming-style = 'UPPER_CASE'
	
	# Exceptions for tests.
	no-docstring-rgx = '^__|.+Tests$|^test|^[Ff]oo$|^[Bb]ar$'
	dummy-variables-rgx = '^(_|[Ff]oo|[Bb]ar)$'
	bad-names = []



[tool.coverage]
	run.source_pkgs = [ 'nbr_5410_calculator' ]
	run.data_file = '.staging/coverage'
	run.branch = true
	
	report.precision = 2
	report.skip_covered = true
	report.show_missing = true
	
	xml.output = '.staging/coverage.xml'